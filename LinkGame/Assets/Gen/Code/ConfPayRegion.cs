//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Linq;



namespace cfg
{

public sealed partial class ConfPayRegion :  Bright.Config.BeanBase 
{
    public ConfPayRegion(ByteBuf _buf) 
    {
        Sn = _buf.ReadInt();
        Code = _buf.ReadString();
        Channels = _buf.ReadString();
        Mark = _buf.ReadString();
        Decimal = _buf.ReadInt();
        ExchangeRate = _buf.ReadFloat();
        Lang = _buf.ReadString();
        PostInit();
    }

    public static ConfPayRegion DeserializeConfPayRegion(ByteBuf _buf)
    {
        return new ConfPayRegion(_buf);
    }

    /// <summary>
    /// sn
    /// </summary>
    public int Sn { get; protected set; }
    /// <summary>
    /// 国家码（两位）
    /// </summary>
    public string Code { get; protected set; }
    /// <summary>
    /// 支付方式
    /// </summary>
    public string Channels { get; protected set; }
    /// <summary>
    /// 货币符号
    /// </summary>
    public string Mark { get; protected set; }
    /// <summary>
    /// 小数点位
    /// </summary>
    public int Decimal { get; protected set; }
    /// <summary>
    /// 汇率
    /// </summary>
    public float ExchangeRate { get; protected set; }
    /// <summary>
    /// 语言
    /// </summary>
    public string Lang { get; protected set; }

    public const int __ID__ = 1443696344;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public void Reload(ConfPayRegion reloadData)
    {
        Sn = reloadData.Sn;
        Code = reloadData.Code;
        Channels = reloadData.Channels;
        Mark = reloadData.Mark;
        Decimal = reloadData.Decimal;
        ExchangeRate = reloadData.ExchangeRate;
        Lang = reloadData.Lang;
    }

    public override string ToString()
    {
        return "{ "
        + "Sn:" + Sn + ","
        + "Code:" + Code + ","
        + "Channels:" + Channels + ","
        + "Mark:" + Mark + ","
        + "Decimal:" + Decimal + ","
        + "ExchangeRate:" + ExchangeRate + ","
        + "Lang:" + Lang + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
