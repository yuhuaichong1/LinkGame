//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Linq;



namespace cfg
{

public sealed partial class ConfLevel :  Bright.Config.BeanBase 
{
    public ConfLevel(ByteBuf _buf) 
    {
        Sn = _buf.ReadInt();
        LevelSize = _buf.ReadString();
        GoodKinds = _buf.ReadInt();
        MoveDic = _buf.ReadInt();
        HiddleGoodMove = _buf.ReadString();
        HiddleGoodStay = _buf.ReadString();
        ObstacleMove = _buf.ReadString();
        ObstacleStay = _buf.ReadString();
        HiddleGoodDelay = _buf.ReadString();
        WithdrawType = _buf.ReadInt();
        PostInit();
    }

    public static ConfLevel DeserializeConfLevel(ByteBuf _buf)
    {
        return new ConfLevel(_buf);
    }

    /// <summary>
    /// sn
    /// </summary>
    public int Sn { get; protected set; }
    /// <summary>
    /// 物品总数
    /// </summary>
    public string LevelSize { get; protected set; }
    /// <summary>
    /// 物品种类数量
    /// </summary>
    public int GoodKinds { get; protected set; }
    /// <summary>
    /// 物品移动方向
    /// </summary>
    public int MoveDic { get; protected set; }
    /// <summary>
    /// 可移动的隐藏物的位置
    /// </summary>
    public string HiddleGoodMove { get; protected set; }
    /// <summary>
    /// 不移动的隐藏物的位置
    /// </summary>
    public string HiddleGoodStay { get; protected set; }
    /// <summary>
    /// 可移动的障碍物的位置
    /// </summary>
    public string ObstacleMove { get; protected set; }
    /// <summary>
    /// 不移动的障碍物的位置
    /// </summary>
    public string ObstacleStay { get; protected set; }
    /// <summary>
    /// 出现延迟隐藏的时间
    /// </summary>
    public string HiddleGoodDelay { get; protected set; }
    /// <summary>
    /// 兑现类型
    /// </summary>
    public int WithdrawType { get; protected set; }

    public const int __ID__ = 1172697760;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public void Reload(ConfLevel reloadData)
    {
        Sn = reloadData.Sn;
        LevelSize = reloadData.LevelSize;
        GoodKinds = reloadData.GoodKinds;
        MoveDic = reloadData.MoveDic;
        HiddleGoodMove = reloadData.HiddleGoodMove;
        HiddleGoodStay = reloadData.HiddleGoodStay;
        ObstacleMove = reloadData.ObstacleMove;
        ObstacleStay = reloadData.ObstacleStay;
        HiddleGoodDelay = reloadData.HiddleGoodDelay;
        WithdrawType = reloadData.WithdrawType;
    }

    public override string ToString()
    {
        return "{ "
        + "Sn:" + Sn + ","
        + "LevelSize:" + LevelSize + ","
        + "GoodKinds:" + GoodKinds + ","
        + "MoveDic:" + MoveDic + ","
        + "HiddleGoodMove:" + HiddleGoodMove + ","
        + "HiddleGoodStay:" + HiddleGoodStay + ","
        + "ObstacleMove:" + ObstacleMove + ","
        + "ObstacleStay:" + ObstacleStay + ","
        + "HiddleGoodDelay:" + HiddleGoodDelay + ","
        + "WithdrawType:" + WithdrawType + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
