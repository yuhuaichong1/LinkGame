//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Linq;



namespace cfg
{

public sealed partial class ConfReddot :  Bright.Config.BeanBase 
{
    public ConfReddot(ByteBuf _buf) 
    {
        Sn = _buf.ReadInt();
        KeyName = _buf.ReadString();
        Father = _buf.ReadInt();
        Path = _buf.ReadString();
        PostInit();
    }

    public static ConfReddot DeserializeConfReddot(ByteBuf _buf)
    {
        return new ConfReddot(_buf);
    }

    /// <summary>
    /// sn
    /// </summary>
    public int Sn { get; protected set; }
    /// <summary>
    /// 红点名称
    /// </summary>
    public string KeyName { get; protected set; }
    /// <summary>
    /// 父对象
    /// </summary>
    public int Father { get; protected set; }
    /// <summary>
    /// 红点路径
    /// </summary>
    public string Path { get; protected set; }

    public const int __ID__ = -2129837188;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public void Reload(ConfReddot reloadData)
    {
        Sn = reloadData.Sn;
        KeyName = reloadData.KeyName;
        Father = reloadData.Father;
        Path = reloadData.Path;
    }

    public override string ToString()
    {
        return "{ "
        + "Sn:" + Sn + ","
        + "KeyName:" + KeyName + ","
        + "Father:" + Father + ","
        + "Path:" + Path + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
